const ExchangeNote = require("../models/exchangeNoteModel"); 
const { sendResponse } = require("../utils/responseHandler");
const HTTP_STATUS = require("../utils/httpStatus");
const asyncHandler = require("../utils/asyncHandler");

const exchangeNoteController = {
    getAllExchangeNotes: asyncHandler(async (req, res) => {
        const exchangeNotes = await ExchangeNote.getAll();
        return sendResponse(
            res,
            HTTP_STATUS.OK,
            true,
            "L·∫•y danh s√°ch phi·∫øu nh·∫≠p/xu·∫•t th√†nh c√¥ng",
            exchangeNotes
        );
    }),

    approveExchangeNote: asyncHandler(async (req, res) => {
        const { exchangeNoteId } = req.params;
        const { status } = req.body;
        
        console.log("üü¢ User t·ª´ token:", req.user); // Debugging
        const approvedBy = req.user?.userCode; // L·∫•y user_code t·ª´ token
    
        if (!approvedBy) {
            return sendResponse(res, HTTP_STATUS.BAD_REQUEST, false, "Kh√¥ng th·ªÉ x√°c ƒë·ªãnh ng∆∞·ªùi duy·ªát phi·∫øu");
        }
    
        if (!["approved", "rejected"].includes(status)) {
            return sendResponse(res, HTTP_STATUS.BAD_REQUEST, false, "Tr·∫°ng th√°i kh√¥ng h·ª£p l·ªá.");
        }
    
        const result = await ExchangeNote.approve(exchangeNoteId, status, approvedBy);
        return sendResponse(res, HTTP_STATUS.OK, true, result.message);
    }),
    

    createImportNote: asyncHandler(async (req, res) => {
        const { warehouse_code, products } = req.body;
        const created_by = req.user?.userCode; 
        console.log("Th√¥ng tin user t·ª´ token:", req.user);


        if (!created_by) {
            return res.status(403).json({ success: false, message: "Kh√¥ng th·ªÉ x√°c ƒë·ªãnh ng∆∞·ªùi t·∫°o phi·∫øu nh·∫≠p" });
        }

        if (!warehouse_code || !products || products.length === 0) {
            return sendResponse(res, HTTP_STATUS.BAD_REQUEST, false, "Th√¥ng tin phi·∫øu nh·∫≠p kh√¥ng h·ª£p l·ªá.");
        }

        const result = await ExchangeNote.createImportNote(warehouse_code, created_by, products);
        return sendResponse(res, HTTP_STATUS.CREATED, true, result.message, { exchangeNoteId: result.exchangeNoteId });
    }),
};

module.exports = exchangeNoteController;
